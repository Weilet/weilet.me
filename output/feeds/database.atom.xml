<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Weilet's Workshop - Database</title><link href="/" rel="alternate"></link><link href="/feeds/database.atom.xml" rel="self"></link><id>/</id><updated>2019-10-14T18:22:00+08:00</updated><entry><title>《sql必知必会》书摘</title><link href="/%E3%80%8Asql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E3%80%8B%E4%B9%A6%E6%91%98.html" rel="alternate"></link><published>2019-10-14T18:22:00+08:00</published><updated>2019-10-14T18:22:00+08:00</updated><author><name>PwnForWhat</name></author><id>tag:None,2019-10-14:/《sql必知必会》书摘.html</id><content type="html">&lt;blockquote&gt;
&lt;p&gt;两天读完一本书，成就感满满，下面直接开始书摘，可能含有本人的一些理解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;主键相关&lt;/h4&gt;
&lt;p&gt;主键唯一非空且&lt;strong&gt;不可重用&lt;/strong&gt;，其实对&lt;strong&gt;不可重用&lt;/strong&gt;的理解不是很到位，日常开发中删除文章的id会重新赋给新建的文章。&lt;/p&gt;
&lt;h4&gt;逻辑操作相关&lt;/h4&gt;
&lt;p&gt;AND计算次序比OR更高，这点和编程语言一样，所以就算是为了可读性，也要常加括号。&lt;/p&gt;
&lt;p&gt;IN比OR的效率更高，且大多数情况下还比较简洁。&lt;/p&gt;
&lt;p&gt;NOT在复杂子句中提高可读性&lt;/p&gt;
&lt;h4&gt;通配符相关&lt;/h4&gt;
&lt;p&gt;Access与其他数据库有很多不同，使用时记得查阅其文档&lt;/p&gt;
&lt;p&gt;通配符虽然使查找变得简单，但也导致查询时间变长&lt;/p&gt;
&lt;h4&gt;联结、子查询相关&lt;/h4&gt;
&lt;p&gt;为聚集函数的结果取个别名是个好习惯&lt;/p&gt;
&lt;p&gt;自联结速度优于子查询&lt;/p&gt;
&lt;p&gt;并非所有DBMS都支持全外联结&lt;/p&gt;
&lt;h4&gt;增删查改相关&lt;/h4&gt;
&lt;p&gt;INTO不要省略，即便你的DBMS允许你省略&lt;/p&gt;
&lt;p&gt;TRUNCATE TABLE比DETELE速度快，因为它不会记录改变&lt;/p&gt;
&lt;h4&gt;高级操作相关&lt;/h4&gt;
&lt;p&gt;每次使用视图都会执行一次查询，性能会降低&lt;/p&gt;
&lt;p&gt;请在使用视图嵌套后测试其性能&lt;/p&gt;
&lt;p&gt;事务管理时创建合适粒度的储存点会使你的ROLLBACK更灵活&lt;/p&gt;
&lt;p&gt;约束比触发器速度更快&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;别漏where&lt;/p&gt;
&lt;p&gt;别漏where&lt;/p&gt;
&lt;p&gt;别漏where&lt;/p&gt;
&lt;p&gt;重要的事情说三遍。&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Database"></category></entry></feed>